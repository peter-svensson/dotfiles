#!/usr/bin/env bash

#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>
#
# This hook checks if all commits are signed (PGP)

# shellcheck disable=2034
remote="$1"
# shellcheck disable=2034
url="$2"

zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')

exit_code=0
# shellcheck disable=2034
while read local_ref local_oid remote_ref remote_oid; do
  if test "${local_oid}" = "${zero}"; then
    # Handle delete
    :
  else
    if test "${remote_oid}" = "${zero}"; then
      # New branch, examine all commits not in merge target (main)
      range="$(git merge-base main "${local_oid}")..${local_oid}"
    else
      # Update to existing branch, examine new commits
      range="${remote_oid}..${local_oid}"
    fi

    # Check for unsigned commit
    while read ref; do
      if ! git verify-commit "${ref}" 2>/dev/null; then
        echo "unsigned commit ${ref}, $(git show -s --format=%s "${ref}")"
        exit_code=1
      fi
    done < <(git rev-list "${range}")
  fi
done

exit ${exit_code}
